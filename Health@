using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class healthcalcs : MonoBehaviour
{

    public int totalHealth;
    public int livesLost;
    public int healthLost;
    public int remainingLives;
    public int gameDifficulty;

    public float distanceBetween;
    public float distanceBetween1;
    public float distanceBetween2;

    private float cooldown;

    public GameObject player;
    public GameObject enemy;
    public GameObject enemy1;
    public GameObject enemy2;

    public Text healthText;


    // Start is called before the first frame update
    void Start()
    {
        
        livesLost = 0;
        totalHealth = 5;

        
        enemy = GameObject.FindGameObjectWithTag("Enemy");
        enemy1 = GameObject.FindGameObjectWithTag("enemy1");
        enemy2 = GameObject.FindGameObjectWithTag("enemy2");
        player = GameObject.FindGameObjectWithTag("Player");
    }

    // Update is called once per frame
    void Update()
    {
        
        cooldown += Time.deltaTime;
        //collects the difficulty chosen by the player from a component that has been carried over from the previous scene
        gameDifficulty = GameObject.Find("difficultyCarrier").GetComponent<difficultyCarrierScript>().selectedDifficulty;
        Debug.Log(gameDifficulty);
        
        //checks the difficulty the player has selected and redirects to the method for that number of enemies.
        if(gameDifficulty == 1)
        {
            playWithOne();          
        }

        if(gameDifficulty == 2)
        {
            playWithTwo();
            Debug.Log(gameDifficulty);
        }

        if (gameDifficulty == 3)
        {
            playWithThree();
        }
        
        //calculates the health and checks if the player has lost all their lives or not
        totalHealth = 5 - livesLost;

        healthText.text = ("Health: " + totalHealth.ToString() + "/5");

        if(totalHealth < 1)
        {
            SceneManager.LoadScene("game over");
        }
        
    }

       
    //this method is for playing with one polar bear(difficulty == 1)
    public void playWithOne()
    {
        //calculates the distance(s) between the player and all the polar bears in the game
        distanceBetween = Vector2.Distance(player.transform.position, enemy.transform.position);

        if (distanceBetween < 1.3f && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;
            
        }
    }

    //this method is for playing with two polar bears(difficulty == 2)
    public void playWithTwo()
    {
        //calculates the distance(s) between the player and all the polar bears in the game
        distanceBetween = Vector2.Distance(player.transform.position, enemy.transform.position);
        distanceBetween1 = Vector2.Distance(player.transform.position, enemy1.transform.position);

        if (distanceBetween < 1.3f && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;           
        }

        if (distanceBetween1 < 1.3f && distanceBetween1 != 0 && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;            
        }
    }

    //this method is for playing with three polar bears(difficulty == 3)
    public void playWithThree()
    {
        //calculates the distance(s) between the player and all the polar bears in the game
        distanceBetween = Vector2.Distance(player.transform.position, enemy.transform.position);
        distanceBetween1 = Vector2.Distance(player.transform.position, enemy1.transform.position);
        distanceBetween2 = Vector2.Distance(player.transform.position, enemy2.transform.position);
         
        if (distanceBetween < 1.3f && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;
        }

        if (distanceBetween1 < 1.3f && distanceBetween1 != 0 && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;
        }
        if (distanceBetween2 < 1.3f && distanceBetween2 != 0 && cooldown > 1f)
        {
            livesLost += 1;
            cooldown = 0f;
        }
    }

}
